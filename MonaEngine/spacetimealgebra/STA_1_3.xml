<?xml version="1.0" encoding="utf-8" ?>

<g25spec 
    license="gpl" 
    language="cpp"
    namespace="m4sta"
    coordStorage="array"
    defaultOperatorBindings="true"
    dimension="4"
    reportUsage="false" 
    gmvCode="expand"
    parser="builtin"
    testSuite="true"
    copyright="Gaigen 2.5 Test Suite"
>

<verbatim filename="m4sta.cpp" position="before" marker="#include ">
#define _CRT_SECURE_NO_WARNINGS
</verbatim>


<inline 
	constructors="false" 
	set="false" 
	assign="false" 
	operators="false" 
	functions="false"
	/>


<floatType type="double"/>

<basisVectorNames 
	name1="g0"
	name2="g1"
	name3="g2"
	name4="g3"
	/>

<metric name="default">g0.g0 = 1</metric>
<metric name="default">g1.g1 = g2.g2 = g3.g3 = -1</metric>

<mv name="mv" compress="byGrade" coordinateOrder="custom" memAlloc="dynamic">
	scalar
	g0 g1 g2 g3
	g0^g1 g0^g2 g0^g3 g1^g2 g1^g3 g2^g3
	g1^g2^g3 g0^g1^g2 g0^g1^g3 g0^g2^g3
	g0^g1^g2^g3
</mv>


<smv name="g0" const="true" type="blade">g0=1</smv>
<smv name="g1" const="true" type="blade">g1=1</smv>
<smv name="g2" const="true" type="blade">g2=1</smv>
<smv name="g3" const="true" type="blade">g3=1</smv>
<smv name="I"  const="true" type="multivector">g0^g1^g2^g3=1</smv>

<smv name="pseudoscalar" type="multivector"> g0^g1^g2^g3</smv>
<smv name="vector"    type="blade">g0 g1 g2 g3</smv>
<smv name="bivector"  type="blade">g0^g1 g0^g2 g0^g3 g1^g2 g1^g3 g2^g3</smv>
<smv name="trivector" type="blade">g1^g2^g3 g0^g1^g2 g0^g1^g3 g0^g2^g3</smv>
<smv name="rotor"     type="versor">scalar g0^g1 g0^g2 g1^g2 g0^g3 g1^g3 g2^g3</smv>
<smv name="oddVersor" type="versor">g0 g1 g2 g3 g0^g1^g2 g0^g1^g3 g0^g2^g3 g1^g2^g3</smv>
<smv name="idk1" type="multivector">scalar g0^g1 g0^g2 g1^g2 g0^g3 g1^g3 g2^g3 g0^g1^g2^g3  <comment>MISSING; PLEASE ADD TO SPECIFICATION</comment></smv>
<smv name="idk2" type="multivector">g0^g1 g0^g2 g1^g2 g0^g3 g1^g3 g2^g3 g0^g1^g2^g3  <comment>MISSING; PLEASE ADD TO SPECIFICATION</comment></smv>




<!--><smv name="rotor"     type="versor">scalar g0^g1 g0^g2 g0^g3</smv><--> <!--> I am unsure whether this "rotor" would be "correct", hence, I am commenting it out.<-->

	<om name="om" coordinateOrder="default" />
	<function name="random_double" outputName="genrand" optionGen="libc"/>

<function name="_bivector"  arg1="rotor"     argName1="R" comment="Extracts the bivector part of a rotor."/>
<function name="_vector"    arg1="oddVersor" argName1="V" comment="Extracts the vector part of an oddVersor."/>
<function name="_trivector" arg1="oddVersor" argName1="V" comment="Extracts the trivector part of an oddVersor."/>


<function name="add" arg1="mv"        arg2="mv"        comment="Adds two general spacetime multivectors."/>
<function name="add" arg1="vector"    arg2="vector"    comment="Adds two spacetime vectors."/>
<function name="add" arg1="bivector"  arg2="bivector"  comment="Adds two spacetime bivectors."/>
<function name="add" arg1="trivector" arg2="trivector" comment="Adds two spacetime trivectors."/>
<function name="add" arg1="vector"    arg2="trivector" comment="Adds a spacetime vector and a spacetime trivector."/>
<function name="add" arg1="rotor"     arg2="bivector"  comment="Adds a spacetime rotor and a spacetime bivector."/>
<function name="add" arg1="g0"        arg2="g1"/>
<function name="add" arg1="g0"        arg2="g2"/>
<function name="add" arg1="g0"        arg2="g3"/>


<function name="subtract" arg1="mv"        arg2="mv"        comment="Subtracts two general spacetime multivectors."/>
<function name="subtract" arg1="vector"    arg2="vector"    comment="Subtracts two spacetime vectors."/>
<function name="subtract" arg1="bivector"  arg2="bivector"  comment="Subtracts two spacetime bivectors."/>
<function name="subtract" arg1="trivector" arg2="trivector" comment="Subtracts two spacetime trivectors."/>
<function name="subtract" arg1="bivector"  arg2="rotor"/>
<function name="subtract" arg1="vector"    arg2="trivector"/>


<function name="div" arg1="mv"        arg2="double" floatType="double" comment="Divides a general spacetime multivector with a double."/>
<function name="div" arg1="vector"    arg2="double" floatType="double" comment="Divides a spacetime vector with a double."/>
<function name="div" arg1="bivector"  arg2="double" floatType="double" comment="Divides a spacetime bivector with a double."/>
<function name="div" arg1="trivector" arg2="double" floatType="double" comment="Divides a spacetime trivector with a double."/>
<function name="div" arg1="rotor"     arg2="double" floatType="double"/>
<function name="div" arg1="g0"        arg2="double" floatType="double"/>
<function name="div" arg1="I"         arg2="double" floatType="double"/>



<function name="dual" arg1="mv"                          comment="The dual of a general spacetime multivector."/>
<function name="dual" arg1="double" floatType="double"   comment="The dual of a scalar."/>
<function name="dual" arg1="vector" 				     comment="The dual of a spacetime vector."/>
<function name="dual" arg1="bivector" 				     comment="The dual of a spacetime bivector."/>
<function name="dual" arg1="trivector" 				     comment="The dual of a spacetime trivector."/>
<!--><function name="dual" arg1="rotor"/><-->
<function name="dual" arg1="oddVersor"/>
<function name="dual" arg1="g0"/>
<function name="dual" arg1="g1"/>
<function name="dual" arg1="g2"/>
<function name="dual" arg1="g3"/>
<function name="dual" arg1="I"/>

<function name="undual" arg1="mv"					     comment="The undual of a general spacetime multivector."/>
<function name="undual" arg1="double" floatType="double" comment="The undual of a scalar." />
<function name="undual" arg1="vector"      				 comment="The undual of a spacetime vector." />
<function name="undual" arg1="bivector"      			 comment="The undual of a spacetime bivector." />
<function name="undual" arg1="trivector"      			 comment="The undual of a spacetime trivector." />
<!--><function name="undual" arg1="rotor"/><-->
<function name="undual" arg1="oddVersor"/>
<function name="undual" arg1="g0"/>
<function name="undual" arg1="g1"/>
<function name="undual" arg1="g2"/>
<function name="undual" arg1="g3"/>
<function name="undual" arg1="I"/>


<function name="equals" arg1="mv"        arg2="mv"        arg3="double" floatType="double" comment="Compares equality between two general spacetime multivectors up to some scalar epsilon (difference threshold)"/>
<function name="equals" arg1="vector"    arg2="vector"    arg3="double" floatType="double" comment="Compares equality between two spacetime vectors up to some scalar epsilon (difference threshold)"/>
<function name="equals" arg1="bivector"  arg2="bivector"  arg3="double" floatType="double" comment="Compares equality between two spacetime bivectors up to some scalar epsilon (difference threshold)"/>
<function name="equals" arg1="trivector" arg2="trivector" arg3="double" floatType="double" comment="Compares equality between two spacetime trivectors up to some scalar epsilon (difference threshold)"/>
<function name="equals" arg1="rotor"     arg2="rotor"     arg3="double" floatType="double"/>
<function name="equals" arg1="bivector"  arg2="rotor"     arg3="double" floatType="double"/>
<function name="equals" arg1="rotor"     arg2="bivector"  arg3="double" floatType="double"/>
<function name="equals" arg1="g0"        arg2="g0"        arg3="double" floatType="double"/>
<function name="equals" arg1="g1"        arg2="I"         arg3="double" floatType="double"/>
  

<!--> Unsure whether the "extractgrade" functions are complete. <-->
<function name="extractGrade" arg1="mv"/>

<function name="extractGrade0" arg1="mv"/>
<function name="extractGrade1" arg1="mv"/>
<function name="extractGrade2" arg1="mv"/>
<function name="extractGrade3" arg1="mv"/>
<function name="extractGrade4" arg1="mv"/>

<function name="extractGrade0" arg1="I"/>
<function name="extractGrade1" arg1="I"/>
<function name="extractGrade2" arg1="I"/>
<function name="extractGrade3" arg1="I"/>
<function name="extractGrade4" arg1="I"/>

<function name="extractGrade0" arg1="rotor"/>
<function name="extractGrade2" arg1="rotor"/>

<function name="extractGrade0" arg1="oddVersor"/>
<function name="extractGrade1" arg1="oddVersor"/>
<function name="extractGrade2" arg1="oddVersor"/>
<function name="extractGrade3" arg1="oddVersor"/>

<!--> Geometric products <-->

<function name="gp" arg1="mv" arg2="mv"/>
<function name="gp" outputName="gp_dont_mangle_1" arg1="mv" arg2="double"/>

<function name="gp" arg1="vector"   arg2="vector"/>
<function name="gp" arg1="rotor"    arg2="vector"/>
<function name="gp" arg1="vector"   arg2="rotor"/>
<function name="gp" arg1="rotor"    arg2="rotor"/>
<function name="gp" arg1="bivector" arg2="bivector"/>
<function name="gp" arg1="g0"       arg2="rotor"/>
<function name="gp" arg1="I"        arg2="rotor"/>
<function name="gp" arg1="bivector" arg2="g0"/>


<!--> Inverse geometric products ? <-->

<function name="igp" arg1="mv" arg2="mv"/>


<!--> Grade Bitmap <-->

<function name="gradeBitmap" arg1="mv" arg2="double" floatType="double"/>

<function name="increment" arg1="mv"/>

<function name="decrement" arg1="mv"/>

<function name="sp" arg1="mv" arg2="mv"/>
<function name="lc" arg1="mv" arg2="mv"/>
<function name="rc" arg1="mv" arg2="mv"/>
<function name="hip" arg1="mv" arg2="mv"/>
<function name="mhip" arg1="mv" arg2="mv"/>

<function name="norm" arg1="mv"/>

<function name="norm2" arg1="mv"/>

<function name="op" arg1="mv" arg2="mv"/>

<function name="sas" arg1="mv" arg2="double" arg3="double" floatType="double"/>

<function name="exp" arg1="mv" />
<function name="cosh" arg1="mv" />
<function name="sinh" arg1="mv" />
<function name="cos" arg1="mv" />
<function name="sin" arg1="mv" />

<function name="negate" arg1="mv"/>
<function name="reverse" arg1="mv"/>
<function name="cliffordConjugate" arg1="mv"/>
<function name="gradeInvolution" arg1="mv"/>

<function name="unit" arg1="mv"/>

<function name="versorInverse" arg1="mv" />

<function name="zero" arg1="mv" arg2="double" floatType="double"/>

</g25spec>